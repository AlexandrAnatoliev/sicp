;;;; 1.2.1 Линейная рекурсия и итерация

					; факториал числа n! = n*(n-1)*(n-2)...3*2*1
					; n! = n*(n-1)!
					; 1!=1

;; Линейно-рекурсивный процесс для вычисления 3!
					; (factorial 3)  
					; (* 3 (factorial 2))
					; (* 3 (* 2 (factorial 1)))
					; (* 3 (* 2 1))
					; (* 3 2)
					; 6

(defun factorial (n)
  "Программа для вычисления факториала N линейно-рекурсивно"
  (if (= n 1)
      1
    (* n (factorial (- n 1)))))

(factorial 3)

					; можно представить факториал 3! = 1*2*3

					; произведение=счетчик*произведение
					; счетчик=счетчик+1

;; Линейно-итеративный процесс для вычисления 3!
					; (factorial 3)
					; (fact-iter 1 1 3)
					; (fact-iter 1 2 3)
					; (fact-iter 2 3 3)
					; (fact-iter 6 4 3)       (fact-iter n! counter n) 
					; 6                       counter>n


(defun factorial (n)
  "Программа для вычисления факториала N линейно-итеративно"
  (fact-iter 1 1 n))

(factorial 3)

(defun fact-iter (product counter max-count)
  "Программа для вычисления произведения чисел PRODUCT*COUNTER, где максимальное значение COUNTER = MAX-COUNT"
  (if (> counter max-count)
      product
    (fact-iter (* counter product)
	       (+ counter 1)
	       max-count)))

;;; Упражнение 1.9

(defun inc (x)
  "Инкрементирует X"
  (+ x 1))

(inc 1)

(defun dec (x)
  "Декрементирует X"
  (- x 1))

(dec 2)

(defun plus (a b)
  "Возвращает сумму двух чисел A и B - рекурсивно"
  (if (= a 0)
      b
    (inc (plus (dec a) b))))

(plus 4 5)

;; Процедура PLUS порождает рекурсивный процесс:
					; (plus 4 5)

					; (inc (plus (dec 4)) 5)
					; (inc (plus (- 4 1) 5))
					; (+ (plus (- 4 1) 5) 1)

					; (+ (plus 3 5) 1)

					; (+ (inc (plus (dec 3 ) 5)) 1)
					; (+ (+ (plus (dec 3) 5) 1) 1)
					; (+ (+ (plus (- 3 1) 5) 1) 1)

					; (+ (+ (plus 2 5) 1) 1)

					; (+ (+ (inc (plus (dec 2) 5)) 1) 1)
					; (+ (+ (+ (plus (dec 2) 5) 1) 1) 1)
					; (+ (+ (+ (plus (- 2 1) 5) 1) 1) 1)

					; (+ (+ (+ (plus 1 5) 1) 1) 1)

					; (+ (+ (+ (inc (plus (dec 1) 5)) 1) 1) 1)
					; (+ (+ (+ (+ (plus (dec 1) 5) 1) 1) 1) 1)
					; (+ (+ (+ (+ (plus (- 1 1) 5) 1) 1) 1) 1)

					; (+ (+ (+ (+ (plus 0 5) 1) 1) 1) 1)

					; (+ (+ (+ (+ 5 1) 1) 1) 1)
					; (+ (+ (+ 6 1) 1) 1)
					; (+ (+ 7 1) 1)
					; (+ 8 1)
					; 9

(defun plus (a b)
  "Возвращает сумму чисел A и B итеративно" 
  (if (= a 0)
      b
    (plus (dec a) (inc b))))

(plus 4 5)

;; Процедура PLUS порождает итеративный процесс
					; (plus 4 5)

					; (plus (dec 4) (inc 5))
					; (plus (- 4 1) (+ 5 1))

					; (plus 3 6)

					; (plus (dec 3) (inc 6))
					; (plus (- 3 1) (+ 6 1)

					; (plus 2 7)

					; (plus (dec 2) (inc 7)
					; (plus (- 2 1) (+ 7 1))

					; (plus 1 8)

					; (plus (dec 1) (inc 8)
					; (plus (- 1 1) (+ 8 1))

					; (plus 0 9)
					; 9


;;; Упражнение 1.10

(defun A (x y)
  "Функция Анкермана"
  (cond ((= y 0) 0)
	((= x 0) (* 2 y))
	((= y 1) 2)
	(t (A (- x 1)
		 (A x (- y 1))))))

(A 1 10) ; 1024
(A 2 4)  ; 65536
(A 3 3)  ; 65536

(defun f (n)
  "Функция возвращает удвоенное значение N"
  (A 0 n))

(f 1) ; 2
(f 2) ; 4
(f 3) ; 6
(f 4) ; 8

(defun g (n)
  "Функция возвращает 2^N"
  (A 1 n))

(g 1) ; 2
(g 2) ; 4
(g 3) ; 8
(g 4) ; 16
(g 5) ; 32

(defun h (n)
  "Функция возвращает 2^(^2(^2...)) N раз"
  (A 2 n))

(h 0) ; 0
(h 1) ; 2
(h 2) ; 4 = 2^2
(h 3) ; 16 = 2^(2^2) = 2^4
(h 4) ; 65536 = 2^(2^(2^2)) = 2^(2^4) = 2^16

(defun k (n)
  "Функция вычисляет 5*N^2"
  (* 5 n n))

(k 1) ; 5
(k 2) ; 20
(k 3) ; 45
(k 4) ; 80
